server:
  port: 8090
#注册到Eureka服务中心
eureka:
  client:
    service-url:
      # 注册到集群，就把多个Eurekaserver地址使用逗号连接起来即可；注册到单实例（非集群模式），那就写一个就ok
      defaultZone: http://eureka2001.yuntian.com:2001/eureka/,http://eureka2003.yuntian.com:2003/eureka/
  instance:
    prefer-ip-address: true  #服务实例中显示ip，而不是显示主机名（兼容老的eureka版本）
    # 实例名称： 192.168.1.103:lagou-service-resume:8080，我们可以自定义它
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
spring:
  application:
    name: yuntian-customer-autodeliver
#针对的被调用方微服务名称,不加就是全局生效
#lagou-service-resume:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整
# springboot中暴露健康检查等断点接口
management:
  endpoints:
    web:
      exposure:
        include: "*"
  # 暴露健康接口的细节
  endpoint:
    health:
      show-details: always

# 配置熔断策略：
hystrix:
  command:
    default:
       circuitBreaker:
         #  # 强制打开熔断器，如果该属性设置为true，强制断路器进⼊打开状态，将会拒
         #  绝所有的请求。 默认false关闭的
         #  基于springboot的健康检查观察跳闸状态（⾃动投递微服务暴露健康检查细节）
         #  访问健康检查接⼝：http://localhost:8090/actuator/health
         #  hystrix正常⼯作状态
         #  跳闸状态
           forceOpen: false
          # 触发熔断错误⽐例阈值，默认值50%
           errorThresholdPercentage: 50
          # 熔断后休眠时⻓，默认值5秒
           sleepWindowInMilliseconds: 3000
          # 熔断触发最⼩请求次数，默认值是20
           requestVolumeThreshold: 2
       execution:
         isolation:
              thread:
                  # 熔断超时设置，默认为1秒
                 timeoutInMilliseconds: 2000
